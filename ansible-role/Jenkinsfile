pipeline{
    agent {label 'master'}
    environment {
        PATH = "$PATH:/usr/share/apache-maven/bin"
    }
    parameters {
        string(name: 'RELEASE_REPO', defaultValue: "libs-release", description: 'Repo for releses')
        string(name: 'SNAPSHOT_REPO', defaultValue: "libs-snapshot", description: 'Repo for snapshot releses')
        
    }
    stages{
        stage('scm'){
            steps{
                git branch: 'main', 
                credentialsId: 'github', 
                url: 'https://github.com/manikumar9951/ansible-roles'
            }
        }
        stage('Artifactory-Configuration') {
            steps {
                rtMavenDeployer (
                    id: 'spc-deployer',
                    serverId: 'jfrog-artifactory',
                    releaseRepo: "${params.RELEASE_REPO}",
                    snapshotRepo: "${params.SNAPSHOT_REPO}"
                    
                )
            }
        }
        stage('Upload artifacts to jfrog') {
            steps {
                rtMavenRun (
                    // Tool name from Jenkins configuration.
                    tool: 'MVN_BUILD',
                    pom: 'pom.xml',
                    goals: 'install',
                    // Maven options.
                    deployerId: 'spc-deployer'
                )
            }
        }
        stage('Download artifacts to jfrog') {
            steps {
                rtDownload (
                 serverId: 'jfrog-artifactory',
                    spec: '''{
                        "files": [
                            {
                            "pattern": "libs-snapshot/com/hello/HelloWorld/0.0.1-SNAPSHOT/HelloWorld-0.0.1-20221219.064922-10.war",
                            "target": "./"
                            }
                        ]
                    }''',
                )
            }
        }
        stage('Ansible-role-deploy'){
            steps{
               ansiblePlaybook credentialsId: 'ec2-user', disableHostKeyChecking: true, installation: 'ansible2', inventory: 'Inventory', playbook: 'playbook.yml'
            }
        }
    }
}
